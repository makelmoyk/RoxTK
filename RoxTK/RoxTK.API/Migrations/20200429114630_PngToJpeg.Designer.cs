// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoxTK.API.Models;

namespace RoxTK.API.Migrations
{
    [DbContext(typeof(TKDBContext))]
    [Migration("20200429114630_PngToJpeg")]
    partial class PngToJpeg
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RoxTK.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DepartmentName = "IT"
                        },
                        new
                        {
                            DepartmentId = 2,
                            DepartmentName = "FC"
                        },
                        new
                        {
                            DepartmentId = 3,
                            DepartmentName = "HR"
                        },
                        new
                        {
                            DepartmentId = 4,
                            DepartmentName = "Marketing"
                        });
                });

            modelBuilder.Entity("RoxTK.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            DateOfBirth = new DateTime(1998, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Email = "magana@servio.ph",
                            FirstName = "Michael Angelo",
                            Gender = 0,
                            ImagePath = "Images/Michael.png",
                            LastName = "Agana"
                        },
                        new
                        {
                            EmployeeId = 2,
                            DateOfBirth = new DateTime(1997, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Email = "daguil@servio.ph",
                            FirstName = "Dale",
                            Gender = 0,
                            ImagePath = "Images/Dale.jpeg",
                            LastName = "Aguil"
                        },
                        new
                        {
                            EmployeeId = 3,
                            DateOfBirth = new DateTime(1999, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            Email = "mboliver@servio.ph",
                            FirstName = "Maynard",
                            Gender = 0,
                            ImagePath = "Images/Maynard.jpeg",
                            LastName = "Boliver"
                        },
                        new
                        {
                            EmployeeId = 4,
                            DateOfBirth = new DateTime(1998, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            Email = "cdistajo@servio.ph",
                            FirstName = "Caye Alexis",
                            Gender = 1,
                            ImagePath = "Images/Caye.jpeg",
                            LastName = "Distajo"
                        },
                        new
                        {
                            EmployeeId = 5,
                            DateOfBirth = new DateTime(1998, 10, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 4,
                            Email = "malcazaren@servio.ph",
                            FirstName = "Mary Rose",
                            Gender = 1,
                            ImagePath = "Images/Rose.jpeg",
                            LastName = "Alcazaren"
                        });
                });

            modelBuilder.Entity("RoxTK.Models.Timekeep", b =>
                {
                    b.Property<int>("TimekeepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LoggedIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LoggedOut")
                        .HasColumnType("datetime2");

                    b.HasKey("TimekeepId");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Timekeeps");

                    b.HasData(
                        new
                        {
                            TimekeepId = 1,
                            DateCreated = new DateTime(2020, 4, 29, 19, 46, 29, 276, DateTimeKind.Local).AddTicks(7150),
                            EmployeeId = 1,
                            LoggedIn = new DateTime(2020, 11, 20, 8, 20, 0, 0, DateTimeKind.Unspecified),
                            LoggedOut = new DateTime(2020, 11, 20, 16, 20, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RoxTK.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            DateCreated = new DateTime(2020, 4, 29, 19, 46, 29, 273, DateTimeKind.Local).AddTicks(7993),
                            Password = "Password1",
                            Role = 1,
                            Username = "Admin"
                        });
                });

            modelBuilder.Entity("RoxTK.Models.Timekeep", b =>
                {
                    b.HasOne("RoxTK.Models.Employee", null)
                        .WithOne("Timekeep")
                        .HasForeignKey("RoxTK.Models.Timekeep", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
